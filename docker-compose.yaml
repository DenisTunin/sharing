version: "3.7"
services:

  service1:
    container_name: service1
    build:
      context: ./sharing-service
      dockerfile: Dockerfile
    depends_on:
      - eureka
    environment:
      - EUREKA_URI=${GLOBAL_EUREKA_URI}
#      - EUREKA_CLIENT_REGISTRYFETCHINTERVALSECONDS=2
#      - EUREKA_INSTANCE_LEASERENEWALINTERWALINSECONDS=1
#      - EUREKA_INSTANCE_LEASEEXPIRATIONDURATIONINSECONDS=5

  service2:
    container_name: service2
    build:
      context: ./sharing-service
      dockerfile: Dockerfile
    depends_on:
      - eureka
    environment:
      - EUREKA_URI=${GLOBAL_EUREKA_URI}
#      - EUREKA_CLIENT_REGISTRYFETCHINTERVALSECONDS=2
#      - EUREKA_INSTANCE_LEASERENEWALINTERWALINSECONDS=1
#      - EUREKA_INSTANCE_LEASEEXPIRATIONDURATIONINSECONDS=5

  service3:
    container_name: service3
    build:
      context: ./sharing-service
      dockerfile: Dockerfile
    depends_on:
      - eureka
    environment:
      - EUREKA_URI=${GLOBAL_EUREKA_URI}
#      - EUREKA_CLIENT_REGISTRYFETCHINTERVALSECONDS=2
#      - EUREKA_INSTANCE_LEASERENEWALINTERWALINSECONDS=1
#      - EUREKA_INSTANCE_LEASEEXPIRATIONDURATIONINSECONDS=5


  client:
    container_name: client
    build:
      context: ./sharing-client
      dockerfile: Dockerfile
    environment:
      - EUREKA_URI=${GLOBAL_EUREKA_URI}
    depends_on:
      - service1
      - service2
      - service3
    ports:
      - 8080:8080

  eureka:
    container_name: eureka
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
#      Service settings
#    environment:
#      - EUREKA_SERVER_RENEWALPERCENTTHRESHOLD=0.30
#      - EUREKA_SERVER_RENEWALTHRESHOLDUPDATEINTERVALMS=1000
    ports:
      - 8761:8761
